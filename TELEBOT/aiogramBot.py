import logging
import asyncio   
# from datetime import datatime

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command, CommandObject
from aiogram.types import FSInputFile
from random import randint
TELEGRAM_TOKEN ="6476180980:AAHNbYz6_ALvd6FRkx3Ad3KGmsp24eotbiE"
Group_ID = "-1001674247269"
# –≤—ã–≤–æ–¥ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
logging.basicConfig(level=logging.INFO)

# —Å–æ–∑–¥–∞–ª–∏ –æ–±—å–µ–∫—Ç bot
bot = Bot(token=TELEGRAM_TOKEN)

# —Å–æ–∑–¥–∞–µ–º –æ–±—å–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä 
dp = Dispatcher()
# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    
    image_from_pc = FSInputFile('stiker.png')
    await message.answer_photo(image_from_pc, caption='–ü–æ–æ–±—à–∞–µ–º—Å—è ü´¶')
    await asyncio.sleep(2)
    await message.answer("–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!, <b>{0.username}</b>! ".format(message.from_user), parse_mode='html')
#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–Ω–¥–æ–º
# /rnd 1-30
@dp.message(Command(commands=['random', 'rand', 'rnd']))
async def get_random(message: types.Message, command: CommandObject):
    rnum = randint(1,6)
    await message.reply(f'–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å:  \t {rnum}')
@dp.message(Command('image'))
async def upload_photo(message: types.Message):
    image_from_pc = FSInputFile('stiker.png')
    await message.answer_photo(image_from_pc, caption='–ü–æ–æ–±—à–∞–µ–º—Å—è ü´¶')

@dp.message(Command('mygroup'))
async def cmd_to_group(message: types.Message, bot: Bot):
    await bot.send_message(Group_ID, "Hello from Mustafo")

#ping pong
@dp.message()
async def echo(message: types.Message):
    print('message listened')
    # await message.answer('–±–æ—Ç Mustafo —É—Å–ª—ã—à–∞–ª: '+message.text)







# –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –≤ –ê–°–°–ò–ù–•–†–û–ù–ù–û–ú —Ä–µ–∂–∏–º–µ 
async def main():
    await dp.start_polling(bot)

# –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
if __name__ == '__main__':
    asyncio.run(main())